<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Teacher
 *
 * @ORM\Table(name="teacher")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\TeacherRepository")
 */
class Teacher
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @ORM\OneToMany(targetEntity="Program", mappedBy="teacher", cascade={"persist"}, orphanRemoval=true)
     */
    private $programs;
    
    /**
     * @ORM\OneToMany(targetEntity="MainTeacher", mappedBy="teacher")
     */
    private $mainTeachers;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="phone_number", type="string", length=255)
     */
    private $phoneNumber;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=255)
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="fristName", type="string", length=255)
     */
    private $firstName;

    /**
     * @var string
     *
     * @ORM\Column(name="adress", type="string", length=255)
     */
    private $adress;

    /**
     * @var string
     *
     * @ORM\Column(name="sex", type="boolean")
     */
    private $sex;

    /**
     * @var string
     *
     * @ORM\Column(name="contractualized", type="boolean")
     */
    private $contractualized;

    /**
     * @var string
     *
     * @ORM\Column(name="age", type="integer", length=3)
     */
    private $age;
    
    private $barcode;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    public function isMainTeacher()
    {
        if(count($this->getMainTeachers()) !== 0){
            return true;
        }else{
            return false;
        }
    }
    
    public function __toString() {
        if($this->name){
            return $this->name;
        }else{
            return 'New Teacher';
        };
    }
    
    public function setPrograms($programs)
    {
        if (count($programs) > 0) {
            foreach ($programs as $p) {
                $this->addProgram($p);
            }
        }

        return $this;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Teacher
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
    
    /**
     * Set barcode
     *
     * @param string $barcode
     *
     * @return Teacher
     */
    public function setBarcode($barcode)
    {
        $this->barcode = $barcode;

        return $this;
    }

    /**
     * Get barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->barcode;
    }
   
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->programs = new \Doctrine\Common\Collections\ArrayCollection();
        $this->mainTeachers = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add program
     *
     * @param \AppBundle\Entity\Program $program
     *
     * @return Teacher
     */
    public function addProgram(\AppBundle\Entity\Program $program)
    {
        $program->setTeacher($this);
        $this->programs->add($program);
    
        //$this->programs[] = $program;

        //return $this;
    }

    /**
     * Remove program
     *
     * @param \AppBundle\Entity\Program $program
     */
    public function removeProgram(\AppBundle\Entity\Program $program)
    {
        $this->programs->removeElement($program);
    }

    /**
     * Get programs
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPrograms()
    {
        return $this->programs;
    }

    /**
     * Add mainTeacher
     *
     * @param \AppBundle\Entity\MainTeacher $mainTeacher
     *
     * @return Teacher
     */
    public function addMainTeacher(\AppBundle\Entity\MainTeacher $mainTeacher)
    {
        $this->mainTeachers[] = $mainTeacher;

        return $this;
    }

    /**
     * Remove mainTeacher
     *
     * @param \AppBundle\Entity\MainTeacher $mainTeacher
     */
    public function removeMainTeacher(\AppBundle\Entity\MainTeacher $mainTeacher)
    {
        $this->mainTeachers->removeElement($mainTeacher);
    }

    /**
     * Get mainTeachers
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getMainTeachers()
    {
        return $this->mainTeachers;
    }

    /**
     * Set phoneNumber.
     *
     * @param string $phoneNumber
     *
     * @return Teacher
     */
    public function setPhoneNumber($phoneNumber)
    {
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Get phoneNumber.
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->phoneNumber;
    }
}
